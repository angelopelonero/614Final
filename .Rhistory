data <- read data.csv
library(readr)
dataset <- read_csv(NULL)
View(dataset)
library(readr)
data <- read_csv("~/Documents/USF/HS614/monday-2-features-spring-2018-master/data.csv")
View(data)
colnames(data)
elix <- read.csv('data.csv')
summary(elix)
names(elix)
names(elix)
library(readr)
data <- read_csv("~/Documents/USF/HS614/monday-2-features-spring-2018-master/data.csv")
View(data)
setwd("~/Documents/USF/HS614/DiabData")
read.csv("diabetic_data.csv")
data <- read.csv("diabetic_data.csv")
help("read.csv")
data <- read.csv("diabetic_data.csv", na.strings = "?")
data
require(caTools)
install.packages(c("BH", "bindr", "bindrcpp", "boot", "cluster", "hms", "httpuv", "Matrix", "mgcv", "nlme", "pillar", "plogr", "Rcpp", "rlang", "rpart", "stringi", "viridis", "yaml"))
install.packages(caTools_1.17.1.tar, repos = NULL, type ="source")
install.packages(caTools_1.17.1.tar, repos = NULL, type ="source")
help("read.csv")
data <- read.csv("diabetic_data.csv", na.strings = "?")
data
set.seed(300)
install.packages("caTools")
library("caTools", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
require("caTools")
diabsplit <- sample.split(data, SplitRatio = 0.8)
head(diabsplit)
diabsplit
head(data)
data
require("caTools")
data$spl <- sample.split(data, SplitRatio = 0.8)
head(data)
help("read.csv")
data <- read.csv("diabetic_data.csv", na.strings = "?")
data
set.seed(300)
require("caTools")
data$spl <- sample.split(data, SplitRatio = 0.8)
head(data)
help("read.csv")
data <- read.csv("diabetic_data.csv", na.strings = "?")
data
set.seed(3000)
require("caTools")
data$spl <- sample.split(data, SplitRatio = 0.8)
head(data)
sample(data)
data$spl = sample.split(data, SplitRatio = 0.8)
train = subset(data, data$spl == TRUE)
view(train)
test = subset(data, data$spl == FALSE)
view(test)
dataaaa = sample.split(data, SplitRatio = 0.8, group = NULL)
dataaaa
help("read.csv")
data1 = read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
require("caTools")
sample(data1)
data1$spl = sample.split(data, SplitRatio = 0.8)
sample(data1)
data1$spl = sample.split(data, SplitRatio = 2/3)
train = subset(data1, data1$spl == TRUE)
sample(data1, size = 101766)
data1$spl = sample.split(data, SplitRatio = 2/3)
train = subset(data1, data1$spl == TRUE)
train
data1$spl = sample.split(data, SplitRatio = 2/3)
head(data1)
require(caTools)
set.seed(101)
sample = sample.split(data1$anycolumn, SplitRatio = .75)
train = subset(data1, sample == TRUE)
test  = subset(data1, sample == FALSE)
sample <- sample.int(n = nrow(data), size = floor(.75*nrow(data)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
sample <- sample.int(n = nrow(data), size = floor(.80*nrow(data)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
help("read.csv")
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
sample <- sample.int(n = nrow(data), size = floor(.80*nrow(data)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
test
plot(train.weight, train.max_glu_serum)
plot(weight, max_glu_serum)
weight <- train.weight
weight
heavy <- train$weight
insu <- train$insulin
plot(heavy,insu)
heavy <- train$weight
med <- train$num_medications
plot(heavy,med)
fit < lm(med~log(heavy))
summary(fit)
fit <- lm(med~log(heavy))
summary(fit)
fit <- lm(med,log(heavy))
summary(fit)
timein <- train$time_in_hospital
labs <- train$num_lab_procedures
plot(timein,labs)
fit <- lm(labs,log(timein))
summary(fit)
library(ISLR)
set.seed(1)
train=sample(392,196)
lm.fit = lm(mpg~horsepower, data=Auto,subset=train)
install.packages("ISLR")
library(ISLR)
set.seed(1)
train=sample(392,196)
library(ISLR)
set.seed(1)
train=sample(392,196)
lm.fit = lm(mpg~horsepower, data=Auto,subset=train)
mean((mpg-predict(lm.fit, Auto))[-train]^2)
lm.fit = lm(mpg~horsepower, data=Auto,subset=train)
attach(Auto)
mean((mpg-predict(lm.fit, Auto))[-train]^2)
install.packages("caret")
lm.fit2=lm(mpg~poly(horsepower,2), data=Auto,subset=train)
mean((mpg-predict(lm.fit2,Auto))[-train^2])
mean((mpg-predict(lm.fit2,Auto))[-train]^2)
lm.fit3=lm(mpg~poly(horsepower,3), data = subset=train)
mean((mpg-predict(lm.fit3,Auto))[-train]^2)
lm.fit3=lm(mpg~poly(horsepower,3), data = Auto, subset=train)
mean((mpg-predict(lm.fit3,Auto))[-train]^2)
?train
?caret.train
library("caret", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
help("read.csv")
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
sample <- sample.int(n = nrow(data), size = floor(.80*nrow(data)), replace = F)
train <- data[sample, ]
test  <- data[-sample, ]
test
train
library(caret)
inTraining ,<- createDataPartition(data1, p= .75, list = FALSE)
training <- data1[ inTraining,]
testing <- data1[-inTraining,]
training
trainIndex <- createDataPartition(data1, p = .8, list = FALSE, times = 1)
head(trainIndex)
library(caret)
trainIndex <- createDataPartition(data1, p = .8, list = FALSE, times = 1)
head(trainIndex)
install.packages("geometry")
help("read.csv")
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1, p = .8, list = FALSE, times = 1)
head(trainIndex)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
diabTrain
diabTrain
fitControl <- trainControl(## 10-fold cv
method= "repeatedcv",
number = 10,
## repeated 10 times
repeats = 10)
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
fitControl
gbmFit1 <- train(Class ~ ., data=training, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(Class ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(insu ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(insu ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1
gbmFit1 <- train(insu ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(diabetesMed ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(weight ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
data1 <- read.csv("diabetic_data.csv", na.strings = "?", "NA")
data1
data1 <- read.csv("diabetic_data.csv", na.strings = "NA")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
diabTrain
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
gbmFit1 <- train(weight ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(insulin ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(number_diagnoses ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1
gbmFit1 <- train(A1Cresult ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
gbmFit1 <- train(A1Cresult ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1
gbmFit1 <- train(insulin ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1
help("train")
gbmFit1 <- train(insulin ~ ., data=diabTrain, method = "bartMachine", trControl = fitControl, verbose = FALSE)
gbmFit1
help("train")
gbmFit1 <- train(insulin ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
data1 <- read.csv("diabetic_data.csv", na.strings = "NA")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
gbmFit1 <- train(insulin ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(readmitted ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
diabTrain2 <- na.omit(diabTrain)
gbmFit1 <- train(readmitted ~ ., data=diabTrain2, method = "gbm", trControl = fitControl, verbose = FALSE)
diabTrain2
help("na.omit")
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
diabTrain2 <- na.omit(diabTrain)
diabTrain2
help("na.omit")
gbmFit1 <- train(readmitted ~ ., data=diabTrain2, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(readmitted ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(readmitted ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit2 <- train(readmitted ~ ., data=diabTrain2, method = "gbm", trControl = fitControl, verbose = FALSE)
SVMFit <- train(insulin ~ ., data = diabTest, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
SVMFit <- train(insulin ~ ., data = diabTrain, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
SVMFit2 <- train(insulin ~ ., data = diabTrain2, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
SVMFit <- train(diabtetesMed ~ ., data = diabTrain, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
SVMFit2 <- train(diabtetesMed ~ ., data = diabTrain2, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
help("read.csv")
data1 <- read.csv("diabetic_data.csv", na.strings = "?")
data1
set.seed(300)
library(caret)
trainIndex <- createDataPartition(data1$insulin, p = .8, list = FALSE, times = 1)
head(trainIndex)
diabTrain <- data1[trainIndex,]
diabTest <- data1[-trainIndex]
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
gbmFit1 <- train(diabtetesMed ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
diabTrain2 <- na.omit(diabTrain)
gbmFit1 <- train(diabtetesMed ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
gbmFit1 <- train(diabetesMed ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
diabTrain2 <- na.omit(diabTrain)
gbmFit2 <- train(diabetesMed ~ ., data=diabTrain2, method = "gbm", trControl = fitControl, verbose = FALSE)
SVMControl <- trainControl(method = "repeatedcv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary, search = "random")
SVMFit <- train(diabtetesMed ~ ., data = diabTrain, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
fitControl <- trainControl(method= "repeatedcv",number = 10, repeats = 10)
gbmFit1 <- train(diabetesMed ~ ., data=diabTrain, method = "gbm", trControl = fitControl, verbose = FALSE)
diabTrain2 <- na.omit(diabTrain)
gbmFit2 <- train(diabetesMed ~ ., data=diabTrain2, method = "gbm", trControl = fitControl, verbose = FALSE)
SVMControl <- trainControl(method = "repeatedcv", number = 10, classProbs = TRUE, summaryFunction = twoClassSummary, search = "random")
SVMFit <- train(diabtetesMed ~ ., data = diabTrain, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
SVMFit2 <- train(diabtetesMed ~ ., data = diabTrain2, method = "svmRadial", trControl = svmControl, preProc = c("center", "scale"), metric = "ROC", tuneLength = 15)
